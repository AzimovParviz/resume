{"version":3,"sources":["portrait.jpg","bg.png","components/repos.js","components/body.js","components/skillcard.js","components/homepage.js","components/sidebar.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","links","Repos","className","map","link","href","url","title","Body","id","src","portrait","SkillCard","props","image","name","experience","info","Home","skill","Sidebar","to","path","component","Header","bg","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,gKCGrCC,EAAQ,CACV,CACH,MAAS,sEACT,IAAO,6CACA,YAAY,IAEhB,CACH,MAAS,uFACT,IAAO,6DACA,YAAY,IAEhB,CACI,MAAS,oFACT,IAAM,mDACN,YAAY,IAEhB,CACH,MAAS,2DACF,IAAM,wDACN,YAAY,KAoBLC,MAhBf,WACE,OACI,yBAAKC,UAAU,SAClB,kDACF,wBAAIA,UAAU,eAEbF,EAAMG,KACF,SAACC,GAAD,OACC,4BAAI,uBAAGF,UAAW,WAAWG,KAAMD,EAAKE,KAAMF,EAAKG,c,iBCR3CC,MAtBf,WACI,OACI,6BACE,yBAAKC,GAAG,WAAWC,IAAKC,MACxB,2BAAOF,GAAG,cACR,4BACE,2CACA,4CAEF,4BACE,wCACA,oDAEF,4BACE,uCACA,oDCHCG,MAbf,SAAoBC,GAChB,OACI,yBAAKX,UAAU,cACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,iBAAgB,yBAAKA,UAAU,gBAAgBQ,IAAKG,EAAMC,SACxE,wBAAIZ,UAAU,aAAY,qCAAWW,EAAME,OAC3C,wBAAIb,UAAU,aAAY,0CAAgBW,EAAMG,aAChD,wBAAId,UAAU,wBAAwBW,EAAMI,SCwCzCC,MA9Cf,WAoCI,OACI,yBAAKhB,UAAU,YACb,wCACA,yBAAKA,UAAU,oBAtCN,CACX,CACIO,GAAI,EACJM,KAAM,2BACND,MAAO,uEACPE,WAAY,WACZC,KAAM,iHAEV,CACIR,GAAI,EACJM,KAAM,SACND,MAAO,6EACPE,WAAY,YACnBC,KAAM,wDAEH,CACIR,GAAI,EACJM,KAAM,iCACND,MAAO,GACPE,WAAY,WACnBC,KAAM,qEAEH,CACIR,GAAI,EACJM,KAAM,wBACNC,WAAY,UACnBC,KAAM,wDAEH,CACIR,GAAI,EACJM,KAAM,YACNC,WAAY,YAQJb,KAAI,SAAAgB,GAAK,OAAG,kBAAC,EAAD,CAAWJ,KAAMI,EAAMJ,KAAMC,WAAYG,EAAMH,WAAYF,MAAOK,EAAML,MAAOG,KAAME,EAAMF,aCb5GG,MAvBf,WACE,OACE,yBAAKlB,UAAU,OAIb,kBAAC,IAAD,KACE,yBAAKA,UAAU,WACb,6BACE,kBAAC,IAAD,CAAMmB,GAAG,WAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,qBAAT,mBACA,kBAAC,EAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAWtB,IACjD,kBAAC,IAAD,CAAOqB,KAAK,UAAUC,UAAWL,Q,iBCZrBM,MARf,WACI,OACI,yBAAKtB,UAAU,cACpB,yBAAKO,GAAG,aAAY,yBAAKC,IAAKe,SCOlBC,MATf,WACE,OACI,yBAAKxB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGYyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ccfe8e46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.d1b57ccb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.f9aef0d0.png\";","import React from 'react';\nimport '../App.css';\n\nconst links = [\n    {\n\t'title': 'boorupaper - set a random image from gelbooru.com as your wallpaper',\n\t'url': 'https://github.com/AzimovParviz/boorupaper',\n        'image-url':''\n    },\n    {\n\t'title': 'telegram-temperature-bot - a telegram bot that sends the temperature from the sensor',\n\t'url': 'https://github.com/AzimovParviz/telegram-temperature-alert',\n        'image-url':''\n    },\n    {\n        'title': 'PS Vita game lister - output your games in your Vita\\'s app folder in the terminal',\n        'url':'https://github.com/AzimovParviz/PSVitaGameLister',\n        'image-url':''\n    },\n    {\n\t'title': 'Rick and Morty character database with API as a back-end',\n        'url':'https://github.com/AzimovParviz/skwebstudioassignment',\n        'image-url':''\n    }\n];\n\nfunction Repos() {\n  return (\n      <div className=\"Repos\" >\n\t  <h1>My GitHub projects</h1>\n\t<ul className=\"projectList\">\n\t    {\n\t\tlinks.map(\n\t\t    (link) =>\n\t\t    (<li><a className =\"repoLink\" href={link.url}>{link.title}</a></li>)\n\t\t)\n\t    }\n\t</ul>\n    </div>\n  );\n}\n\nexport default Repos;\n","import React from 'react';\nimport '../App.css';\nimport portrait from '../portrait.jpg';\n\nfunction Body() {\n    return(\n        <div>\n          <img id=\"portrait\" src={portrait}></img>\n          <table id=\"basic-info\">\n            <tr>\n              <td>Telephone: </td>\n              <td>88005353535</td>\n            </tr>\n            <tr>\n              <td>E-mail: </td>\n              <td>user.name@email.com</td>\n            </tr>\n            <tr>\n              <td>Adress:</td>\n              <td>Lenina 69, 42000</td>\n            </tr>\n          </table>\n        </div>\n    );\n}\n\nexport default Body;\n","import React, {useState, useEffect} from 'react';\nimport '../App.css';\n\nfunction SkillCard (props) {\n    return (\n        <div className=\"skill-card\">\n          <ul className=\"skill-info\" >\n            <li className=\"skill-picture\"><img className=\"skill-picture\" src={props.image}/></li>\n            <li className=\"card-item\"><b>Skill: {props.name}</b></li>\n            <li className=\"card-item\"><b>Experience: {props.experience}</b></li>\n            <li className=\"card-item popup-text\">{props.info}</li>\n          </ul>\n        </div>\n    );\n}\n\nexport default SkillCard;\n","import React from 'react';\nimport SkillCard from './skillcard.js';\nimport '../App.css';\n\nfunction Home() {\n    const skills = [\n        {\n            id: 0,\n            name: \"C#/.NET Core 3.0/ASP.NET\",\n            image: \"https://upload.wikimedia.org/wikipedia/commons/7/7a/C_Sharp_logo.svg\",\n            experience: \"3+ years\",\n            info: \".NET Core 3.0 web applications with Entity Framework, Desktop Applications with C# and WPF with SQL databases\",\n        },\n        {\n            id: 1,\n            name: \"Python\",\n            image: \"https://upload.wikimedia.org/wikipedia/commons/c/c3/Python-logo-notext.svg\",\n            experience: \"1,5 years\",\n\t    info: \"Workplace automation, web scraping, CLI applications\"\n        },\n        {\n            id: 2,\n            name: \"React.js/Node.js/MongoDB stack\",\n            image: \"\",\n            experience: \"6 months\",\n\t    info: \"Various online courses. This website is also made with this stack\"\n        },\n        {\n            id: 3,\n            name: \"MSSQL, MySQL, MongoDB\",\n            experience: \"2 years\",\n\t    info: \"Database management for web and desktop applications\"\n        },\n        {\n            id: 4,\n            name: \"Photoshop\",\n            experience: \"2 years\"\n        }\n    ];\n    \n    return(\n        <div className=\"homepage\">\n          <h1>About me</h1>\n          <div className=\"homepage-flexbox\">\n            {skills.map(skill=> <SkillCard name={skill.name} experience={skill.experience} image={skill.image} info={skill.info}/>)}\n          </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport '../App.css';\nimport Repos from './repos.js';\nimport Body from './body.js';\nimport Home from './homepage.js';\nimport App from '../App.js';\n\nfunction Sidebar() {\n  return (\n    <div className=\"App\">\n    \t    {/* <a href=\"../index.js\">Home</a> */}\n    \t    {/* <a href=\"./repos.js\">GitHub projects</a> */}\n    \t  {/* <a href=\"#contact\">Contact</a> */}\n      <BrowserRouter>\n        <div className=\"sidenav\">\n          <div>\n            <Link to=\"/resume\">Home</Link>\n            <Link to=\"/resume/projects/\">GitHub projects</Link>\n            <Body/>\n          </div>\n        </div>\n        <Switch>\n          <Route path=\"/resume/projects\" component={Repos} />\n\t  <Route path=\"/resume\" component={Home}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport '../App.css';\nimport bg from \"../bg.png\";\n\nfunction Header() {\n    return(\n        <div className=\"App-header\">\n\t  <div id=\"header-bg\"><img src={bg}/></div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar.js';\nimport Header from './components/header.js';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Header />\n        <Sidebar/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Repos from './components/repos.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}